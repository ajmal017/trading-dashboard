{"ast":null,"code":"import _classCallCheck from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dmitry/React/dashboard/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Order from './components/Order';\nimport Trade from './components/Trade';\nimport TextInput from './components/TextInput';\nimport InstrumentSelector from './components/InstrumentSelector';\nimport SideSelector from './components/SideSelector';\nimport ServerManager from './components/ServerManager';\nimport PriceChart from './components/PriceChart';\nimport Socket from './socket/socket';\nvar serverHostName = new ServerManager().getServerHostname();\ndocument.title = \"Trading Dashboard\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      orders: [],\n      trades: [],\n      tradePrices: [],\n      ord_props: {}\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onNewOrderUpdate\",\n    value: function onNewOrderUpdate(key, value) {\n      console.log('onNewOrderUpdate: key: ' + key + ' , value: ' + value);\n      var ord_p = this.state.ord_props;\n      ord_p[key] = value;\n      this.setState({\n        ord_props: ord_p\n      });\n\n      if (key === 'instcode') {\n        this.getTradesByInstrument(this.state.ord_props.instcode);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshData();\n    }\n  }, {\n    key: \"refreshData\",\n    value: function refreshData() {\n      this.getOrders();\n      this.getTrades();\n      this.getTradesByInstrument(this.state.ord_props.instcode);\n    }\n  }, {\n    key: \"getOrders\",\n    value: function getOrders() {\n      var _this2 = this;\n\n      axios.get(serverHostName + \"/order\").then(function (res) {\n        console.log(res.data);\n        console.log(res.data.length);\n        var order_list = res.data;\n\n        if (typeof order_list != 'string') {\n          _this2.setState({\n            orders: order_list.reverse()\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getTrades\",\n    value: function getTrades() {\n      var _this3 = this;\n\n      axios.get(serverHostName + \"/trade\").then(function (res) {\n        console.log(res.data);\n        console.log(res.data.length);\n        var trade_list = res.data;\n        console.log(trade_list);\n        console.log(trade_list.length);\n        console.log(typeof trade_list);\n\n        if (typeof trade_list != 'string') {\n          _this3.setState({\n            trades: trade_list.reverse()\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getTradesByInstrument\",\n    value: function getTradesByInstrument(instrCode) {\n      var _this4 = this;\n\n      axios.get(serverHostName + \"/trade/byInstr?instCode=\" + instrCode).then(function (res) {\n        console.log(res.data);\n        console.log(res.data.length);\n        var trade_list = res.data;\n\n        _this4.setState({\n          tradePrices: trade_list\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this5 = this;\n\n      var socket = Socket.getInstance();\n      axios.post(serverHostName + '/order/add', {\n        \"InstrCode\": this.state.ord_props.instcode,\n        \"Quantity\": this.state.ord_props.quantity,\n        \"Price\": this.state.ord_props.price,\n        \"Notes\": this.state.ord_props.notes,\n        \"Side\": this.state.ord_props.side\n      }).then(function (response) {\n        console.log(response);\n\n        _this5.refreshData();\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var selectedTrades = [];\n\n      if (this.state.tradePrices.length > 0) {\n        selectedTrades = this.state.tradePrices.map(function (trade) {\n          return {\n            \"timestamp\": trade.Timestamp,\n            \"price\": trade.Price\n          };\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MainBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FloatLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"OrderEntry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Order entry\"), React.createElement(InstrumentSelector, {\n        onInputUpdate: function onInputUpdate(key, value) {\n          return _this6.onNewOrderUpdate(key, value);\n        },\n        tag: \"instcode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(SideSelector, {\n        onInputUpdate: function onInputUpdate(key, value) {\n          return _this6.onNewOrderUpdate(key, value);\n        },\n        tag: \"side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(TextInput, {\n        onInputUpdate: function onInputUpdate(key, value) {\n          return _this6.onNewOrderUpdate(key, value);\n        },\n        input_name: \"Quantity\",\n        tag: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(TextInput, {\n        onInputUpdate: function onInputUpdate(key, value) {\n          return _this6.onNewOrderUpdate(key, value);\n        },\n        input_name: \"Price\",\n        tag: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(TextInput, {\n        onInputUpdate: function onInputUpdate(key, value) {\n          return _this6.onNewOrderUpdate(key, value);\n        },\n        input_name: \"Notes\",\n        tag: \"notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"Button\",\n        id: \"btn_send_order\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Send order\"))), React.createElement(\"div\", {\n        className: \"FloatLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Trade prices\"), React.createElement(PriceChart, {\n        instrumentCode: this.state.ord_props.instcode,\n        data: selectedTrades,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MainBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FloatLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Orders\"), React.createElement(\"table\", {\n        className: \"DataTable\",\n        id: \"orders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Timestamp\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Inst\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Side\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Qty\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Filled Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Fill Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Notes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Action\")), this.state.orders.map(function (order) {\n        return React.createElement(Order, {\n          orderid: order.OrderID,\n          timestamp: order.Timestamp,\n          instrument: order.InstrCode,\n          side: order.Side,\n          quantity: order.Quantity,\n          price: order.Price,\n          quantity_filled: order.QuantityFilled,\n          fill_price: order.FillPrice,\n          status: order.Status,\n          notes: order.Notes,\n          updateView: _this6.refreshData.bind(_this6),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        });\n      }))), React.createElement(\"div\", {\n        className: \"FloatLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Trades\"), React.createElement(\"table\", {\n        className: \"DataTable\",\n        id: \"trades\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Trade ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Timestamp\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Resting order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Incoming order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Qty\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Price\")), this.state.trades.map(function (trade) {\n        return React.createElement(Trade, {\n          tradeid: trade.TradeID,\n          timestamp: trade.Timestamp,\n          restingorderid: trade.RestingOrderID,\n          incomingorderid: trade.IncomingOrderID,\n          quantity: trade.Quantity,\n          price: trade.Price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/dmitry/React/dashboard/src/App.js"],"names":["React","Component","axios","Order","Trade","TextInput","InstrumentSelector","SideSelector","ServerManager","PriceChart","Socket","serverHostName","getServerHostname","document","title","App","state","orders","trades","tradePrices","ord_props","handleClick","bind","key","value","console","log","ord_p","setState","getTradesByInstrument","instcode","refreshData","getOrders","getTrades","get","then","res","data","length","order_list","reverse","trade_list","instrCode","socket","getInstance","post","quantity","price","notes","side","response","error","selectedTrades","map","trade","Timestamp","Price","onNewOrderUpdate","order","OrderID","InstrCode","Side","Quantity","QuantityFilled","FillPrice","Status","Notes","TradeID","RestingOrderID","IncomingOrderID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Order from './components/Order'\nimport Trade from './components/Trade'\nimport TextInput from './components/TextInput'\nimport InstrumentSelector from './components/InstrumentSelector'\nimport SideSelector from './components/SideSelector'\nimport ServerManager from './components/ServerManager'\nimport PriceChart from './components/PriceChart'\nimport Socket from './socket/socket'\n\nconst serverHostName = new ServerManager ().getServerHostname();\n\ndocument.title = \"Trading Dashboard\";\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  state = {\n    orders: [],\n    trades: [],\n    tradePrices: [],\n    ord_props: {}\n  }\n\n  onNewOrderUpdate(key, value) {\n    console.log('onNewOrderUpdate: key: ' + key + ' , value: ' + value)\n    var ord_p = this.state.ord_props\n    ord_p[key] = value\n    this.setState({ ord_props: ord_p })\n    if (key === 'instcode') {\n      this.getTradesByInstrument(this.state.ord_props.instcode)\n    }\n  }\n\n  componentDidMount() {\n    this.refreshData();\n  }\n\n  refreshData() {\n    this.getOrders()\n    this.getTrades()\n    this.getTradesByInstrument(this.state.ord_props.instcode)\n  }\n\n  getOrders() {\n    axios.get(serverHostName + `/order`)\n      .then(res => {\n        console.log(res.data);\n        console.log(res.data.length);\n        const order_list = res.data;\n        if (typeof(order_list) != 'string') {\n          this.setState({ orders: order_list.reverse() });\n        }\n      });\n  }\n\n  getTrades() {\n    axios.get(serverHostName + `/trade`)\n      .then(res => {\n        console.log(res.data);\n        console.log(res.data.length);\n        const trade_list = res.data;\n        console.log(trade_list);\n        console.log(trade_list.length);\n        console.log(typeof(trade_list));\n        if (typeof(trade_list) != 'string') {\n          this.setState({ trades: trade_list.reverse() });\n        }\n      });\n  }\n\n  getTradesByInstrument(instrCode) {\n    axios.get(serverHostName + `/trade/byInstr?instCode=` + instrCode)\n      .then(res => {\n        console.log(res.data);\n        console.log(res.data.length);\n        const trade_list = res.data;\n        this.setState({ tradePrices: trade_list });\n      });\n  }\n\n  handleClick() {\n    const socket = Socket.getInstance();\n    axios.post(serverHostName + '/order/add', {\n      \"InstrCode\": this.state.ord_props.instcode,\n      \"Quantity\": this.state.ord_props.quantity,\n      \"Price\": this.state.ord_props.price,\n      \"Notes\": this.state.ord_props.notes,\n      \"Side\": this.state.ord_props.side,\n\t})\n\t.then(\n\t\t(response) => { console.log(response); this.refreshData() },\n\t\t(error) => { console.log(error) }\n\t);\n  }\n\n  render() {\n\n    var selectedTrades = []\n    if (this.state.tradePrices.length > 0) {\n      selectedTrades = this.state.tradePrices.map(trade => { return {\"timestamp\": trade.Timestamp, \"price\": trade.Price}});\n    }\n\n    return (\n      <div>\n        <div className=\"MainBlock\">\n        <div className=\"FloatLeft\">\n        <div className=\"OrderEntry\">\n          <h1 className=\"Title\" id=\"title\">Order entry</h1>\n          <InstrumentSelector\n             onInputUpdate={(key, value) => this.onNewOrderUpdate(key, value)} tag=\"instcode\"/>\n          <SideSelector\n             onInputUpdate={(key, value) => this.onNewOrderUpdate(key, value)} tag=\"side\"/>\n          <TextInput\n             onInputUpdate={(key, value) => this.onNewOrderUpdate(key, value)} input_name=\"Quantity\" tag=\"quantity\"/>\n          <TextInput\n             onInputUpdate={(key, value) => this.onNewOrderUpdate(key, value)} input_name=\"Price\" tag=\"price\"/>\n          <TextInput\n             onInputUpdate={(key, value) => this.onNewOrderUpdate(key, value)} input_name=\"Notes\" tag=\"notes\"/>\n          <button className=\"Button\" id=\"btn_send_order\" onClick={this.handleClick}>Send order</button>\n        </div>\n\t    </div>\n        <div className=\"FloatLeft\">\n          <h1 className= \"Title\" id=\"title\">Trade prices</h1>\n          <PriceChart instrumentCode={this.state.ord_props.instcode} data={selectedTrades}/>\n        </div>\n        </div>\n        <ul>\n        <div className=\"MainBlock\">\n            <div className=\"FloatLeft\">\n            <h1 className= \"Title\" id=\"title\">Orders</h1>\n            <table className=\"DataTable\" id=\"orders\">\n              <tr>\n                <th>Order ID</th>\n                <th>Timestamp</th>\n                <th>Inst</th>\n                <th>Side</th>\n                <th>Qty</th>\n                <th>Price</th>\n                <th>Filled Quantity</th>\n                <th>Fill Price</th>\n                <th>Status</th>\n                <th>Notes</th>\n                <th>Action</th>\n              </tr>\n              {this.state.orders.map(order =>\n                <Order orderid={order.OrderID} timestamp={order.Timestamp} instrument={order.InstrCode} side={order.Side} quantity={order.Quantity} price={order.Price} quantity_filled={order.QuantityFilled} fill_price={order.FillPrice} status={order.Status} notes={order.Notes} updateView={this.refreshData.bind(this)} />\n              )}\n            </table>\n            </div>\n            <div className=\"FloatLeft\">\n            <h1 className=\"Title\" id=\"title\">Trades</h1>\n            <table className=\"DataTable\" id=\"trades\">\n              <tr>\n                <th>Trade ID</th>\n                <th>Timestamp</th>\n                <th>Resting order ID</th>\n                <th>Incoming order ID</th>\n                <th>Qty</th>\n                <th>Price</th>\n              </tr>\n              {this.state.trades.map(trade =>\n                <Trade tradeid={trade.TradeID} timestamp={trade.Timestamp} restingorderid={trade.RestingOrderID} incomingorderid={trade.IncomingOrderID} quantity={trade.Quantity} price={trade.Price} />\n              )}\n            </table>\n            </div>\n        </div>\n        </ul>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}