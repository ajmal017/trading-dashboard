{"ast":null,"code":"var Config = {\n  PROTOCOL: \"ws:\",\n  HOST: \"//localhost\",\n  PORT: \":7888\"\n};\n\nvar Socket = function () {\n  function createInstance() {\n    var address = Config.PROTOCOL + Config.HOST + Config.PORT;\n    var socket = new WebSocket(address);\n    console.log(\"Created a Socket instance at: \" + address);\n    return socket;\n  }\n\n  return {\n    getInstance: function getInstance() {\n      instance = createInstance();\n      return instance;\n    }\n  };\n}();\n\nexport function subscribeForPushNotifications(subscriptionSubject, callback) {\n  var socket = Socket.createInstance();\n\n  socket.onopen = function () {\n    var msg = JSON.stringify({\n      type: \"SUBSCRIBE\",\n      subject: subscriptionSubject\n    });\n    socket.send(msg);\n  };\n\n  socket.onmessage = function (msg) {\n    console.log(\"SOCKET: \" + msg.data);\n    callback();\n  };\n}\nexport default Socket;","map":{"version":3,"sources":["/home/dmitry/React/dashboard/src/socket/Socket.js"],"names":["Config","PROTOCOL","HOST","PORT","Socket","createInstance","address","socket","WebSocket","console","log","getInstance","instance","subscribeForPushNotifications","subscriptionSubject","callback","onopen","msg","JSON","stringify","type","subject","send","onmessage","data"],"mappings":"AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,KADG;AAEbC,EAAAA,IAAI,EAAE,aAFO;AAGbC,EAAAA,IAAI,EAAE;AAHO,CAAf;;AAMA,IAAMC,MAAM,GAAI,YAAW;AAEzB,WAASC,cAAT,GAA0B;AACxB,QAAMC,OAAO,GAAGN,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACE,IAAzB,GAAgCF,MAAM,CAACG,IAAvD;AACA,QAAMI,MAAM,GAAG,IAAIC,SAAJ,CAAcF,OAAd,CAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCJ,OAA/C;AACA,WAAOC,MAAP;AACD;;AAED,SAAO;AACLI,IAAAA,WAAW,EAAE,uBAAW;AACtBC,MAAAA,QAAQ,GAAGP,cAAc,EAAzB;AACA,aAAOO,QAAP;AACD;AAJI,GAAP;AAQD,CAjBc,EAAf;;AAmBA,OAAO,SAASC,6BAAT,CAAuCC,mBAAvC,EAA4DC,QAA5D,EAAsE;AAE3E,MAAMR,MAAM,GAAGH,MAAM,CAACC,cAAP,EAAf;;AAEAE,EAAAA,MAAM,CAACS,MAAP,GAAgB,YAAM;AACpB,QAAMC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACC,MAAAA,IAAI,EAAC,WAAN;AAAmBC,MAAAA,OAAO,EAACP;AAA3B,KAAf,CAAZ;AACAP,IAAAA,MAAM,CAACe,IAAP,CAAYL,GAAZ;AACD,GAHD;;AAKAV,EAAAA,MAAM,CAACgB,SAAP,GAAmB,UAACN,GAAD,EAAS;AAC1BR,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaO,GAAG,CAACO,IAA7B;AACAT,IAAAA,QAAQ;AACT,GAHD;AAID;AAED,eAAeX,MAAf","sourcesContent":["const Config = {\n  PROTOCOL: \"ws:\",\n  HOST: \"//localhost\",\n  PORT: \":7888\"\n}\n\nconst Socket = (function() {\n\n  function createInstance() {\n    const address = Config.PROTOCOL + Config.HOST + Config.PORT\n    const socket = new WebSocket(address)\n    console.log(\"Created a Socket instance at: \" + address)\n    return socket;\n  }\n\n  return {\n    getInstance: function() {\n      instance = createInstance()\n      return instance\n    }\n  }\n\n\n})();\n\nexport function subscribeForPushNotifications(subscriptionSubject, callback) {\n\n  const socket = Socket.createInstance()\n\n  socket.onopen = () => {\n    const msg = JSON.stringify({type:\"SUBSCRIBE\", subject:subscriptionSubject})\n    socket.send(msg)\n  }\n\n  socket.onmessage = (msg) => {\n    console.log(\"SOCKET: \" + msg.data)\n    callback()\n  }\n}\n\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}