{"ast":null,"code":"import _classCallCheck from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dmitry/React/dashboard/src/components/InstrumentSelector.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Instrument from './Instrument';\nimport ServerManager from './ServerManager';\nimport './Selector.css';\nvar serverHostName = new ServerManager().getServerHostname();\n\nvar InstrumentSelector =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstrumentSelector, _React$Component);\n\n  function InstrumentSelector(props) {\n    var _this;\n\n    _classCallCheck(this, InstrumentSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstrumentSelector).call(this, props));\n    _this.state = {\n      instruments: []\n    };\n    return _this;\n  }\n\n  _createClass(InstrumentSelector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getInstruments();\n    }\n  }, {\n    key: \"getInstruments\",\n    value: function getInstruments() {\n      var _this2 = this;\n\n      axios.get(serverHostName + \"/instruments\").then(function (res) {\n        console.log(res.data);\n        console.log(res.data.length);\n        var inst_list = res.data;\n\n        _this2.setState({\n          instruments: inst_list\n        }); // initialize the instrument with the first instrument available\n\n\n        _this2.props.onInputUpdate(_this2.props.tag, _this2.state.instruments[0].InstrCode);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"Label\",\n        id: \"lab\",\n        for: \"sel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Instrument: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        className: \"Select\",\n        id: \"sel\",\n        value: this.state.inputValue,\n        onChange: function onChange(evt) {\n          return _this3.submitInputValue(evt);\n        },\n        onBlur: function onBlur(evt) {\n          return _this3.submitInputValue(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.instruments.map(function (instr) {\n        return React.createElement(Instrument, {\n          instr_code: instr.InstrCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      })));\n    }\n  }, {\n    key: \"submitInputValue\",\n    value: function submitInputValue(evt) {\n      this.setState({\n        inputValue: evt.target.value\n      });\n      this.props.onInputUpdate(this.props.tag, evt.target.value);\n    }\n  }]);\n\n  return InstrumentSelector;\n}(React.Component);\n\nexport default InstrumentSelector;","map":{"version":3,"sources":["/home/dmitry/React/dashboard/src/components/InstrumentSelector.js"],"names":["React","Component","axios","Instrument","ServerManager","serverHostName","getServerHostname","InstrumentSelector","props","state","instruments","getInstruments","get","then","res","console","log","data","length","inst_list","setState","onInputUpdate","tag","InstrCode","inputValue","evt","submitInputValue","map","instr","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,gBAAP;AAEA,IAAMC,cAAc,GAAG,IAAID,aAAJ,GAAqBE,iBAArB,EAAvB;;IAEMC,kB;;;;;AAEF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,4FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAFe;AAKlB;;;;wCAEmB;AAClB,WAAKC,cAAL;AACD;;;qCAEgB;AAAA;;AACfT,MAAAA,KAAK,CAACU,GAAN,CAAUP,cAAc,iBAAxB,EACGQ,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,MAArB;AACA,YAAMC,SAAS,GAAGL,GAAG,CAACG,IAAtB;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAAEV,UAAAA,WAAW,EAAES;AAAf,SAAd,EAJW,CAKX;;;AACA,QAAA,MAAI,CAACX,KAAL,CAAWa,aAAX,CAAyB,MAAI,CAACb,KAAL,CAAWc,GAApC,EAAyC,MAAI,CAACb,KAAL,CAAWC,WAAX,CAAuB,CAAvB,EAA0Ba,SAAnE;AACD,OARH;AASD;;;6BAEQ;AAAA;;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,EAAE,EAAC,KAA5B;AAAkC,QAAA,GAAG,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,EAAE,EAAC,KAA9B;AAAoC,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWe,UAAtD;AAAkE,QAAA,QAAQ,EAAE,kBAAAC,GAAG;AAAA,iBAAI,MAAI,CAACC,gBAAL,CAAsBD,GAAtB,CAAJ;AAAA,SAA/E;AAA+G,QAAA,MAAM,EAAE,gBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACC,gBAAL,CAAsBD,GAAtB,CAAJ;AAAA,SAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKhB,KAAL,CAAWC,WAAX,CAAuBiB,GAAvB,CAA2B,UAAAC,KAAK;AAAA,eAC/B,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAEA,KAAK,CAACL,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD+B;AAAA,OAAhC,CADH,CAHF,CADJ;AAYH;;;qCAEgBE,G,EAAK;AACpB,WAAKL,QAAL,CAAc;AACVI,QAAAA,UAAU,EAAEC,GAAG,CAACI,MAAJ,CAAWC;AADb,OAAd;AAGA,WAAKtB,KAAL,CAAWa,aAAX,CAAyB,KAAKb,KAAL,CAAWc,GAApC,EAAyCG,GAAG,CAACI,MAAJ,CAAWC,KAApD;AACD;;;;EA9C4B9B,KAAK,CAACC,S;;AAiDvC,eAAeM,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Instrument from './Instrument'\nimport ServerManager from './ServerManager'\nimport './Selector.css'\n\nconst serverHostName = new ServerManager ().getServerHostname();\n\nclass InstrumentSelector extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            instruments: []\n        }\n    }\n\n    componentDidMount() {\n      this.getInstruments()\n    }\n\n    getInstruments() {\n      axios.get(serverHostName + `/instruments`)\n        .then(res => {\n          console.log(res.data);\n          console.log(res.data.length);\n          const inst_list = res.data;\n          this.setState({ instruments: inst_list });\n          // initialize the instrument with the first instrument available\n          this.props.onInputUpdate(this.props.tag, this.state.instruments[0].InstrCode);\n        });\n    }\n\n    render() {\n\n        return (\n            <div>\n              <label className=\"Label\" id=\"lab\" for=\"sel\">Instrument: </label>\n              <br />\n              <select className=\"Select\" id=\"sel\" value={this.state.inputValue} onChange={evt => this.submitInputValue(evt)} onBlur={evt => this.submitInputValue(evt)}>\n                {this.state.instruments.map(instr =>\n                  <Instrument instr_code={instr.InstrCode} />\n                )}\n\n              </select>\n            </div>\n        )\n    }\n\n    submitInputValue(evt) {\n      this.setState({\n          inputValue: evt.target.value\n      });\n      this.props.onInputUpdate(this.props.tag, evt.target.value);\n    }\n}\n\nexport default InstrumentSelector;\n"]},"metadata":{},"sourceType":"module"}