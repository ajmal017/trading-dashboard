{"ast":null,"code":"import _classCallCheck from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dmitry/React/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dmitry/React/dashboard/src/components/Order.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ServerManager from './ServerManager';\nvar serverHostName = new ServerManager().getServerHostname();\n\nvar Order =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Order, _Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      highlighted: false,\n      status: \"\",\n      quantity_filled: 0\n    };\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        style: {\n          backgroundColor: this.getRowColor()\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.orderid), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.timestamp), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.instrument), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.side), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.price), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.quantity_filled), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.fill_price), React.createElement(\"td\", {\n        style: {\n          backgroundColor: this.getStatusColor()\n        },\n        id: \"order_status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.status), React.createElement(\"td\", {\n        id: \"order_notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.notes), React.createElement(\"td\", {\n        id: \"order_cancel\",\n        onClick: this.cancelOrder.bind(this, this.props.orderid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }, {\n    key: \"getStatusColor\",\n    value: function getStatusColor() {\n      return this.props.status === \"C\" ? this.getRowColor() : this.state.highlighted ? 'orange' : 'MediumSpringGreen';\n    }\n  }, {\n    key: \"getRowColor\",\n    value: function getRowColor() {\n      return this.state.highlighted ? 'orange' : 'white';\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        status: this.props.status\n      });\n      this.setState({\n        quantity_filled: this.props.quantity_filled\n      });\n      this.flash();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.status !== this.props.status || this.state.quantity_filled !== this.props.quantity_filled) {\n        this.setState({\n          status: this.props.status\n        });\n        this.setState({\n          quantity_filled: this.props.quantity_filled\n        });\n        this.flash();\n      }\n    }\n  }, {\n    key: \"flash\",\n    value: function flash() {\n      var _this2 = this;\n\n      this.setState({\n        highlighted: true\n      });\n      setTimeout(function () {\n        _this2.setState({\n          highlighted: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"cancelOrder\",\n    value: function cancelOrder(orderID) {\n      axios.post(serverHostName + '/order/delete', {\n        \"OrderID\": this.props.orderid\n      });\n    }\n  }]);\n\n  return Order;\n}(Component);\n\nexport default Order;","map":{"version":3,"sources":["/home/dmitry/React/dashboard/src/components/Order.js"],"names":["React","Component","axios","ServerManager","serverHostName","getServerHostname","Order","state","highlighted","status","quantity_filled","backgroundColor","getRowColor","props","orderid","timestamp","instrument","side","quantity","price","fill_price","getStatusColor","notes","cancelOrder","bind","setState","flash","setTimeout","orderID","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ServerManager from './ServerManager'\n\nconst serverHostName = new ServerManager ().getServerHostname();\n\nclass Order extends Component {\n\n    state = {\n      highlighted: false,\n      status: \"\",\n      quantity_filled: 0\n    }\n\n    render() {\n      return (\n        <tbody>\n          <tr style={{backgroundColor: this.getRowColor()}}>\n            <td>{this.props.orderid}</td>\n            <td>{this.props.timestamp}</td>\n            <td>{this.props.instrument}</td>\n            <td>{this.props.side}</td>\n            <td>{this.props.quantity}</td>\n            <td>{this.props.price}</td>\n            <td>{this.props.quantity_filled}</td>\n            <td>{this.props.fill_price}</td>\n            <td style={{backgroundColor: this.getStatusColor() }} id=\"order_status\">{this.props.status}</td>\n            <td id=\"order_notes\">{this.props.notes}</td>\n            <td id=\"order_cancel\" onClick={this.cancelOrder.bind(this, this.props.orderid)}><button>Cancel</button></td>\n          </tr>\n        </tbody>\n      );\n    }\n\n    getStatusColor() {\n      return this.props.status===\"C\"?this.getRowColor():\n                                     this.state.highlighted? 'orange':'MediumSpringGreen'\n    }\n\n    getRowColor() {\n      return this.state.highlighted? 'orange':'white'\n    }\n\n    componentDidMount() {\n      this.setState({status: this.props.status})\n      this.setState({quantity_filled: this.props.quantity_filled})\n      this.flash()\n    }\n\n    componentDidUpdate() {\n      if (this.state.status !== this.props.status ||\n          this.state.quantity_filled !== this.props.quantity_filled) {\n\n        this.setState({status: this.props.status})\n        this.setState({quantity_filled: this.props.quantity_filled})\n\n        this.flash()\n      }\n    }\n\n    flash() {\n      this.setState({highlighted:true})\n      setTimeout(() => {this.setState({highlighted:false})}, 500)\n    }\n\n    cancelOrder(orderID) {\n      axios.post(serverHostName + '/order/delete', {\n        \"OrderID\": this.props.orderid\n\t    });\n    }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}