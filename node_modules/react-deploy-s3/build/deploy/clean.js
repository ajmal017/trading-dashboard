'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _cliSpinner = require('cli-spinner');

var _cliColor = require('cli-color');

var _cliColor2 = _interopRequireDefault(_cliColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function _callee(_ref) {
  var s3 = _ref.s3;
  var bucket = _ref.bucket;
  var spinner, listResult;
  return _regenerator2.default.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          spinner = new _cliSpinner.Spinner('%s Removing old files...');

          spinner.setSpinnerString('⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏');
          spinner.start();

          _context.next = 5;
          return _regenerator2.default.awrap(s3.listObjects({ Bucket: bucket }).promise());

        case 5:
          listResult = _context.sent;

          if (!(listResult.Contents.length === 0)) {
            _context.next = 9;
            break;
          }

          spinner.stop(true);
          return _context.abrupt('return', console.log('No files to delete'));

        case 9:
          _context.next = 11;
          return _regenerator2.default.awrap(s3.deleteObjects({
            Bucket: bucket,
            Delete: {
              Objects: listResult.Contents.map(function (file) {
                return { Key: file.Key };
              })
            }
          }).promise());

        case 11:

          spinner.stop(true);

          console.log(_cliColor2.default.bold('Old files deleted'));

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, null, undefined);
};