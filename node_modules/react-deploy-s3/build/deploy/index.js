'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _upload = require('./upload');

var _upload2 = _interopRequireDefault(_upload);

var _invalidate = require('./invalidate');

var _invalidate2 = _interopRequireDefault(_invalidate);

var _cliColor = require('cli-color');

var _cliColor2 = _interopRequireDefault(_cliColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function _callee(_ref) {
  var accessKeyId = _ref.accessKeyId;
  var secretAccessKey = _ref.secretAccessKey;
  var bucket = _ref.bucket;
  var region = _ref.region;
  var distributionId = _ref.distributionId;
  var rebuildApp = _ref.rebuildApp;
  return _regenerator2.default.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          console.log('\n' + _cliColor2.default.blue.underline('React deploy S3') + '\n');
          _context.next = 3;
          return _regenerator2.default.awrap((0, _upload2.default)({
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey,
            bucket: bucket,
            region: region,
            shouldBuild: rebuildApp !== 'no'
          }));

        case 3:
          console.log(_cliColor2.default.bold('App deployed at "' + bucket + '"'));

          if (!distributionId) {
            _context.next = 8;
            break;
          }

          _context.next = 7;
          return _regenerator2.default.awrap((0, _invalidate2.default)({
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey,
            distributionId: distributionId
          }));

        case 7:
          console.log(_cliColor2.default.bold('Invalidation created'));

        case 8:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
};